#include <stdlib.h>
#include <string.h>
#include <arpa/inet.h>
#include <netinet/in.h>
#include <stdio.h>
#include <sys/types.h>
#include <sys/socket.h>
#include <unistd.h>
#include <netinet/ip.h>

#define BUFFSZ 1024
#define UDP_PORT 5005

int main(int argc, char* argv[]){
  struct sockaddr_in si_srv, si_cli;
  int sock, i = sizeof(struct sockaddr_in);
  char buf[BUFFSZ];
  
  if( (sock = socket(AF_INET, SOCK_DGRAM, IPPROTO_UDP)) == -1 )
    perror("SRV\terror openong a socket"), exit(0);

  memset((char *) &si_srv, 0, sizeof(struct sockaddr_in));
  si_srv.sin_family = AF_INET;
  si_srv.sin_port = htons(UDP_PORT);
  si_srv.sin_addr.s_addr = htonl(INADDR_ANY);
  if( bind(sock, (struct sockaddr *) &si_srv, i) == -1 )
    perror("SRV:\tbind failed"), exit(0);

  while(1){
    i = sizeof(struct sockaddr_in);
    if( recvfrom(sock, buf, BUFFSZ, 0, (struct sockaddr *) &si_cli, &i) 
	== -1)
      printf("SRV:\t recvfrom failed\n"), exit(0);

 
    printf("Received packet from %s:%d\nData: %s\n\n", 
	   inet_ntoa(si_cli.sin_addr), ntohs(si_cli.sin_port), buf);
  }

  close(sock);
  return;
}
